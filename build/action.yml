name: Plan terraform configuration
description: "Plan terraform configuration"
inputs:
  landingzonenamerootpath:
    description: "The root path of the landing zone"
    required: true
  configurationfolder:
    description: "The folder of the configuration"
    required: true
  environment:
    description: "The environment to deploy to"
    required: true
  terraformphase:
    description: "The terraform phase to run"
    required: true
  automatedrun:
    description: "If the run is automated or not"
    required: true
  terraformconfigplanfilepath:
    description: "The path to the terraform configuration plan file"
    required: true
  terraformconfigplanfile:
    description: "The name of the terraform configuration plan file"
    required: true
  terraformworkingpath:
    description: "The path to the terraform working directory"
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: Planning Terraform
      if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
      shell: pwsh
      run: |
        # dirty hack to get the path to the action
        $BasePath = "${{ github.action_path }}" -replace '/build', ''
        $Script = ".$BasePath/scripts/Run-TerraformIaC.ps1"
        $ScriptParams =@()
        $Script += ("-LandingZoneNameRootPath", "${{ inputs.landingzonenamerootpath }}")
        $Script += ("-ConfigurationFolder", "${{ inputs.configurationfolder }}")
        $Script += ("-Environment", "${{ inputs.environment }}")
        $Script += ("-TerraformPhase", "${{ inputs.terraformphase }}")
        $Script += ("-AutomatedRun:$([bool]::Parse("${{ inputs.automatedrun }}")))
        $Script += ("-TerraformConfigPlanFilePath", "${{ inputs.terraformconfigplanfilepath }}")
        $Script += ("-TerraformConfigPlanFile", "${{ inputs.terraformconfigplanfile }}")
        $Script += ("-TerraformWorkingPath", "${{ inputs.terraformworkingpath }}")
  
        Invoke-Expression $Script, $ScriptParams
      
    - name: Upload plan file
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.terraformconfigplanfile }}
        path: ${{ inputs.terraformconfigplanfilepath }}
