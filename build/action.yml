name: Plan terraform configuration
description: "Plan terraform configuration"
inputs:
  configurationfolder:
    description: "The folder of the configuration"
    required: true
  terraformphase:
    description: "The terraform phase to run"
    required: true
  automatedrun:
    description: "If the run is automated or not"
    required: true
runs:
  using: "composite"
  steps:
    - name: Planning Terraform
      shell: pwsh
      run: |
        # dirty hack to get the path to the action
        $BasePath = "${{ github.action_path }}" -replace '/build', ''
        $Script = "$BasePath/scripts/Run-TerraformIaC.ps1"
        $ScriptParams =@()
        $ScriptParams += ("-LandingZoneNameRootPath", "${{ env.TF_LANDING_ZONE_ROOT_PATH }}")
        $ScriptParams += ("-ConfigurationFolder", "${{ inputs.configurationfolder }}")
        $ScriptParams += ("-Environment", "${{ env.ENVIRONMENT }}")
        $ScriptParams += ("-TerraformPhase", "${{ inputs.terraformphase }}")
        $ScriptParams += (, "-AutomatedRun:`$$([bool]::Parse("${{ inputs.automatedrun }}"))")
        $ScriptParams += ("-TerraformConfigPlanFilePath", "${{ env.TF_AUTO_WORKING_PATH }}")
        $ScriptParams += ("-TerraformConfigPlanFile", "${{ env.TF_PLAN_FILE }}")
        $ScriptParams += ("-TerraformWorkingPath", "${{ env.TF_AUTO_WORKING_PATH }}")

        Invoke-Expression "$Script $($ScriptParams -join ' ') -Verbose"

    # - uses: robburger/terraform-pr-commenter@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     commenter_type: fmt/init/plan/validate # Choose one
    #     commenter_input: ${{ format('{0}{1}', steps.step_id.outputs.stdout, steps.step_id.outputs.stderr) }}
    #     commenter_exitcode: ${{ steps.step_id.outputs.exitcode }}
        
    - name: Upload plan file
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.TF_PLAN_FILE }}
        path: ${{ env.TF_AUTO_WORKING_PATH }}/${{ env.TF_PLAN_FILE }}
