name: Apply terraform configuration
description: "Apply terraform configuration"
inputs:
  configurationfolder:
    description: "The folder of the configuration"
    required: true
  terraformphase:
    description: "The terraform phase to run"
    required: true
  automatedrun:
    description: "If the run is automated or not"
    required: true
runs:
  using: "composite"
  steps:
    - name: Download plan file
      #if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.TF_PLAN_FILE }}
        path: ${{ env.TF_AUTO_WORKING_PATH }}/${{ env.TF_PLAN_FILE }}
    - name: Display structure of downloaded files
      shell: bash
      run: |
        ls -R
        ls -la tfplan
        unzip tfplan
      working-directory: ${{ env.TF_AUTO_WORKING_PATH }}
    - name: Deploying Terraform
      shell: pwsh
      run: |
        # dirty hack to get the path to the action
        $BasePath = "${{ github.action_path }}" -replace '/deploy', ''
        $Script = "$BasePath/scripts/Run-TerraformIaC.ps1"
        $ScriptParams =@()
        $ScriptParams += ("-LandingZoneNameRootPath", "${{ env.TF_LANDING_ZONE_ROOT_PATH }}")
        $ScriptParams += ("-ConfigurationFolder", "${{ inputs.configurationfolder }}")
        $ScriptParams += ("-Environment", "${{ env.ENVIRONMENT }}")
        $ScriptParams += ("-TerraformPhase", "${{ inputs.terraformphase }}")
        $ScriptParams += (, "-AutomatedRun:`$$([bool]::Parse("${{ inputs.automatedrun }}"))")
        $ScriptParams += ("-TerraformConfigPlanFilePath", "${{ env.TF_AUTO_WORKING_PATH }}")
        $ScriptParams += ("-TerraformConfigPlanFile", "${{ env.TF_PLAN_FILE }}")
        $ScriptParams += ("-TerraformWorkingPath", "${{ env.TF_AUTO_WORKING_PATH }}")
        
        Invoke-Expression "$Script $($ScriptParams -join ' ')"