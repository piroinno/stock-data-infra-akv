name: Apply terraform configuration
description: "Apply terraform configuration"
inputs:
  landingzonenamerootpath:
    description: 'The root path of the landing zone'
    required: true
  configurationfolder:
    description: 'The folder of the configuration'
    required: true
  environment:
    description: 'The environment to deploy to'
    required: true
  terraformphase:
    description: 'The terraform phase to run'
    required: true
  automatedrun:
    description: 'If the run is automated or not'
    required: true
  terraformconfigplanfilepath:
    description: 'The path to the terraform configuration plan file'
    required: true
  terraformconfigplanfile:
    description: 'The name of the terraform configuration plan file'
    required: true
  terraformworkingpath:
    description: 'The path to the terraform working directory'
    required: true
runs:
  using: "composite"
  steps:
    - name: Download plan file
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.terraformconfigplanfile }}
        path: ${{ inputs.terraformconfigplanfilepath }}

    - name: Deploying Terraform
      if: ${{ github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/uat' || github.ref == 'refs/heads/main' }}
      shell: pwsh
      run: |
        # dirty hack to get the path to the action
        $BasePath = "${{ github.action_path }}" -replace '/build', ''
        $Script = "$BasePath/scripts/Run-TerraformIaC.ps1"
        $ScriptParams =@()
        $ScriptParams += ("-LandingZoneNameRootPath", "${{ inputs.landingzonenamerootpath }}")
        $ScriptParams += ("-ConfigurationFolder", "${{ inputs.configurationfolder }}")
        $ScriptParams += ("-Environment", "${{ inputs.environment }}")
        $ScriptParams += ("-TerraformPhase", "${{ inputs.terraformphase }}")
        $ScriptParams += (,"-AutomatedRun:`$$([bool]::Parse("${{ inputs.automatedrun }}"))")
        $ScriptParams += ("-TerraformConfigPlanFilePath", "${{ inputs.terraformconfigplanfilepath }}")
        $ScriptParams += ("-TerraformConfigPlanFile", "${{ inputs.terraformconfigplanfile }}")
        $ScriptParams += ("-TerraformWorkingPath", "${{ inputs.terraformworkingpath }}")
        
        Invoke-Expression "$Script $($ScriptParams -join ' ')"